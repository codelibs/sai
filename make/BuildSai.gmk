#
# Copyright (c) 2010, 2013, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# This must be the first rule
default: all

-include $(SPEC)
include MakeBase.gmk
include JavaCompilation.gmk

JDK_CLASSES := $(JDK_OUTPUTDIR)/classes

SAI_JAR := $(SAI_DIST)/sai.jar
SAI_VERSION := $(JDK_VERSION)
SAI_FULL_VERSION := $(FULL_VERSION)

ifdef MILESTONE
  ifeq ($(MILESTONE), internal)
    SAI_VERSION = $(FULL_VERSION)
  endif
endif

# Need to use source and target 7 for saigen to work.
$(eval $(call SetupJavaCompiler,GENERATE_NEWBYTECODE_DEBUG, \
    JVM := $(JAVA), \
    JAVAC := $(NEW_JAVAC), \
    FLAGS := -g -source 7 -target 7 -bootclasspath $(JDK_CLASSES), \
    SERVER_DIR := $(SJAVAC_SERVER_DIR), \
    SERVER_JVM := $(SJAVAC_SERVER_JAVA)))

# Build sai into intermediate directory
$(eval $(call SetupJavaCompilation,BUILD_SAI, \
    SETUP := GENERATE_NEWBYTECODE_DEBUG, \
    SRC := $(SAI_TOPDIR)/src, \
    COPY := .properties .js, \
    BIN := $(SAI_OUTPUTDIR)/sai_classes))

NASGEN_SRC := $(SAI_TOPDIR)/buildtools/saigen/src

# Build saigen
$(eval $(call SetupJavaCompilation,BUILD_NASGEN, \
    SETUP := GENERATE_NEWBYTECODE_DEBUG, \
    SRC := $(NASGEN_SRC), \
    BIN := $(SAI_OUTPUTDIR)/saigen_classes, \
    ADD_JAVAC_FLAGS := -bootclasspath "$(BOOT_RTJAR)$(PATH_SEP)$(SAI_OUTPUTDIR)/sai_classes"))

# Saigen needs sai classes
$(BUILD_NASGEN): $(BUILD_SAI)

# Copy classes to final classes dir and run saigen to modify classes in org.codelibs.sai.internal.objects package
$(SAI_OUTPUTDIR)/classes/_the.saigen.run: $(BUILD_NASGEN)
	$(ECHO) Running saigen
	$(MKDIR) -p $(@D)
	$(RM) -rf $(@D)/jdk $(@D)/netscape
	$(CP) -R -p $(SAI_OUTPUTDIR)/sai_classes/* $(@D)/
	$(FIXPATH) $(JAVA) \
	    -Xbootclasspath/p:"$(SAI_OUTPUTDIR)/saigen_classes$(PATH_SEP)$(SAI_OUTPUTDIR)/sai_classes" \
	    org.codelibs.sai.internal.tools.saigen.Main $(@D) org.codelibs.sai.internal.objects $(@D)
	$(TOUCH) $@

# Version file needs to be processed with version numbers
VERSION_FILE := $(SAI_OUTPUTDIR)/classes/org/codelibs/sai/internal/runtime/resources/version.properties

# Needs to happen after saigen run since saigen run deletes it
$(VERSION_FILE): $(SAI_OUTPUTDIR)/classes/_the.saigen.run
$(VERSION_FILE): $(SAI_TOPDIR)/src/org/codelibs/sai/internal/runtime/resources/version.properties-template
	$(ECHO) Creating version.properties
	$(MKDIR) -p $(@D)
	$(CAT) $< | $(SED) -e 's/$$(FULL_VERSION)/$(SAI_FULL_VERSION)/g' \
	    -e 's/$$(RELEASE)/$(SAI_VERSION)/g' \
	    -e '/^#.*$$/d' -e '/^$$/d'  > $@


MANIFEST_ATTRIBUTES := Name: org/codelibs/sai/\nImplementation-Title: Oracle Sai\nImplementation-Version: $(SAI_FULL_VERSION)

# Create sai.jar from the final classes dir
$(eval $(call SetupArchive,BUILD_SAI_JAR, \
    $(SAI_OUTPUTDIR)/classes/_the.saigen.run \
    $(VERSION_FILE), \
    SRCS := $(SAI_OUTPUTDIR)/classes, \
    SUFFIXES := .class .js .properties Factory, \
    MANIFEST := $(SAI_TOPDIR)/src/META-INF/MANIFEST.MF, \
    EXTRA_MANIFEST_ATTR := $(MANIFEST_ATTRIBUTES), \
    SKIP_METAINF := true, \
    JAR := $(SAI_JAR)))

all: $(SAI_JAR)

.PHONY: all
